stages:
   - config
   - build
   - scan

folder-structure-preparation:
  image:
    name: registry.gitlab.cpicloudservices.com/it/security/coverity-analysis-docker:dotnet-framework-sdk
    entrypoint: [""]
  stage: config
  script:
    - git clone https://$GITLAB_LOGIN_USER_NAME`:$GITLAB_ACCESS_TOKEN@gitlab.cpicloudservices.com/engineering/easitrax-connect/swc/product-config.git
    
    - New-item -Path nuget.config -itemtype "file" -value $NUGET_CONFIG
    
    - New-Item -ItemType "directory" -Path repository
    - Get-ChildItem -Path . -Name -Exclude repository,product-config | Move-Item -Destination repository
    - New-Item -ItemType "directory" -Path final
    - Get-ChildItem -Path . -Name -Exclude final | Move-Item -Destination final  
    
    - Get-ChildItem -Path final\repository -Recurse -Include nuget.config | % {(Get-Content $_.fullName).replace($STYLESOFT_NUGET_SOURCE, $EASITRAX_PROGET_NUGET_SOURCE) | Set-Content $_.fullName}
  tags:
    - windows-runner
  artifacts:
    paths:
      - final
    expire_in: 1 day

# Build
bvlive-command-task-service-build:
  image: mcr.microsoft.com/dotnet/framework/sdk
  stage: build
  variables:
    CI_BUILDS_DIR: "c:\\builds"
    CI_PROJECT_DIR: "ec_build"
    GIT_CLONE_PATH: $CI_BUILDS_DIR/ec_build
  script:
  
    # Building bvlive command task service
    - echo "Building bvlive command task service..."
    - dotnet restore final\repository\src\Swc.BvliveCommandTaskService\Swc.BvliveCommandTaskService.Tasks.sln 
    - dotnet build final\repository\src\Swc.BvliveCommandTaskService\Swc.BvliveCommandTaskService.Tasks.sln --configuration=Release
    
    # saving artifacts..
    - New-Item -ItemType "directory" -Path "artifacts"
    - Move-Item -Path final\repository\src\Swc.BvliveCommandTaskService\Swc.BvliveCommandTaskService.Service\bin\Release -Destination artifacts\Swc.BvliveCommandTaskService.Service
  only:
    - branches
  tags:
    - windows-runner
  artifacts:
    paths:
        - artifacts

bvlive-equipment-bts-build:
  image: mcr.microsoft.com/dotnet/framework/sdk
  stage: build
  variables:
    CI_BUILDS_DIR: "c:\\builds"
    CI_PROJECT_DIR: "ec_build"
    GIT_CLONE_PATH: $CI_BUILDS_DIR/ec_build
  script:
  
    # Building bvlive equipment bts
    - echo "Building bvlive equipment bts..."
    - dotnet restore final\repository\src\Swc.BvliveEquipmentBTS\Swc.BvliveEquipmentBackgroundTasks.sln
    - dotnet build final\repository\src\Swc.BvliveEquipmentBTS\Swc.BvliveEquipmentBackgroundTasks.sln --configuration=Release
    
    # saving artifacts..
    - New-Item -ItemType "directory" -Path "artifacts"
    - Move-Item -Path final\repository\src\Swc.BvliveEquipmentBTS\Swc.BvliveEquipmentTaskService.Service\bin\Release -Destination artifacts\Swc.BvliveEquipmentTaskService.Service

  only:
    - branches
  tags:
    - windows-runner
  artifacts:
    paths:
        - artifacts


blackduck_scan:
  stage: scan
  variables:
    PROJECT_NAME: MVN-AWS-EC-Bvlive-Command-Tasks
  image:
    name: registry.gitlab.cpicloudservices.com/it/security/coverity-analysis-docker:maven-3-jdk-8
    entrypoint: [""]
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_COMMIT_SHA)
    - echo $COMMIT_TIME
    - bash <(curl -s -L https://detect.synopsys.com/detect.sh)  --blackduck.url=https://blackduck.cpicloudservices.com/ --blackduck.username=$BLACKDUCK_USER --blackduck.password=$BLACKDUCK_PASSWORD
      --blackduck.trust.cert=true --detect.project.name=$PROJECT_NAME '--detect.source.path=$CI_PROJECT_DIR' 
      '--detect.project.version.name=$PROJECT_NAME:$CI_COMMIT_BRANCH Date:$COMMIT_TIME' '--detect.blackduck.signature.scanner.snippet.matching=FULL_SNIPPET_MATCHING'
      
bvlive-command-task-service-coverity_scan:
  stage: scan
  variables:
    PROJECT_NAME: AWS-EC-Bvlivecommandtasks-Service
  image:
    name: registry.gitlab.cpicloudservices.com/it/security/coverity-analysis-docker:dotnet-framework-sdk
    entrypoint: [""]
  script:
    - C:/cov/cov-analysis-win64-2020.09/bin/cov-configure.exe --cs
   
    - dotnet restore final\repository\src\Swc.BvliveCommandTaskService\Swc.BvliveCommandTaskService.Tasks.sln 
    - C:/cov/cov-analysis-win64-2020.09/bin/cov-build.exe --dir idir dotnet build final\repository\src\Swc.BvliveCommandTaskService\Swc.BvliveCommandTaskService.Tasks.sln --configuration=Release

    - C:/cov/cov-analysis-win64-2020.09/bin/cov-analyze.exe --dir idir --all --enable-audit-mode --enable-constraint-fpp --disable-parse-warnings -n LOG_INJECTION -en RISKY_CRYPTO -en HARDCODED_CREDENTIALS -en WEAK_PASSWORD_HASH -en UNENCRYPTED_SENSITIVE_DATA -en WEAK_GUARD -en AUDIT.SPECULATIVE_EXECUTION_DATA_LEAK -en DC.STRING_BUFFER -en ENUM_AS_BOOLEAN -en INTEGER_OVERFLOW -en MIXED_ENUMS -en USER_POINTER -en FLOATING_POINT_EQUALITY -en VCALL_IN_CTOR_DTOR --webapp-security
    - C:/cov/cov-analysis-win64-2020.09/bin/cov-commit-defects.exe --dir idir --url http://coverity.cpicloudservices.com:14800 --on-new-cert trust --stream $PROJECT_NAME --user $COVERITY_USER --password $COVERITY_PASSWORD
  tags:
    - windows-runner      
    
bvlive-command-task-equipment-bts-coverity_scan:
  stage: scan
  variables:
    PROJECT_NAME: AWS-EC-Bvlivecommandtasks-Equipment-Bts
  image:
    name: registry.gitlab.cpicloudservices.com/it/security/coverity-analysis-docker:dotnet-framework-sdk
    entrypoint: [""]
  script:
    - C:/cov/cov-analysis-win64-2020.09/bin/cov-configure.exe --cs
   
    - dotnet restore final\repository\src\Swc.BvliveEquipmentBTS\Swc.BvliveEquipmentBackgroundTasks.sln
    - C:/cov/cov-analysis-win64-2020.09/bin/cov-build.exe --dir idir dotnet build final\repository\src\Swc.BvliveEquipmentBTS\Swc.BvliveEquipmentBackgroundTasks.sln --configuration=Release

    - C:/cov/cov-analysis-win64-2020.09/bin/cov-analyze.exe --dir idir --all --enable-audit-mode --enable-constraint-fpp --disable-parse-warnings -n LOG_INJECTION -en RISKY_CRYPTO -en HARDCODED_CREDENTIALS -en WEAK_PASSWORD_HASH -en UNENCRYPTED_SENSITIVE_DATA -en WEAK_GUARD -en AUDIT.SPECULATIVE_EXECUTION_DATA_LEAK -en DC.STRING_BUFFER -en ENUM_AS_BOOLEAN -en INTEGER_OVERFLOW -en MIXED_ENUMS -en USER_POINTER -en FLOATING_POINT_EQUALITY -en VCALL_IN_CTOR_DTOR --webapp-security
    - C:/cov/cov-analysis-win64-2020.09/bin/cov-commit-defects.exe --dir idir --url http://coverity.cpicloudservices.com:14800 --on-new-cert trust --stream $PROJECT_NAME --user $COVERITY_USER --password $COVERITY_PASSWORD
  tags:
    - windows-runner      